name: Create and publish a Docker image

on:
  push:
    branches: ['master', 'add-container-image']
    tags: ['v*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  CHANNEL_ID: ${{ vars.SLACK_CHANNEL_ID }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        items:
          - file: docker/5.9/amd64/Dockerfile
            platform: linux/amd64
          - file: docker/5.9/arm64/Dockerfile
            platform: linux/arm64

    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build_and_push_docker_image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.items.platform }}
          file: ${{ matrix.items.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Send a message on Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ env.CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "New Docker image ðŸ¤–"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "An image ${{ env.DOCKER_METADATA_OUTPUT_TAGS }} was built and deployed"
                  }
                }
              ]
            }
